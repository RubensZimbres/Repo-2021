NO UPDATES

68  wget https://repo.anaconda.com/archive/Anaconda3-2020.07-Linux-x86_64.sh
   70  sudo bash Anaconda3-2020.07-Linux-x86_64.sh
   72  source /home/anaconda3/bin/activate
   78  sudo apt-get install -y libboost-all-dev
   79  pip install cmake python-Levenshtein Flask gunicorn pybase64 protobuf nltk fuzzywuzzy python-csv Unidecode torch tensorflow-gpu transformers imutils scikit-image opencv-python text2num sklearn scikit-learn
   80  pip install --upgrade google-cloud-vision
   81  pip install --upgrade google-cloud-language
   82  pip install --upgrade google-cloud
   83  pip install google-cloud-storage
   84  pip install google-cloud-bigquery
   85  sudo apt-get install apt-transport-https ca-certificates gnupg
   86  echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
   87  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
   88  sudo apt-get update && sudo apt-get install google-cloud-cli
   89  python -c "import nltk;nltk.download('punkt');nltk.download('stopwords')"
   90  conda *** install dlib
   94  pip install numpy --upgrade --ignore-installed
   pip install terminal-copilot (copilot ask)
   
Instalar displaylink com old monitor conectado ***   
   
hwinfo --gfxcard --short
lspci | grep -i vga
lspci -s 01:00.0 -v

Kernel driver in use: nouveau
Kernel modules: nvidiafb, nouveau

sudo ubuntu-drivers autoinstall


sudo apt install nvidia-driver-510 nvidia-dkms-510

sudo apt install nvidia-cuda-toolkit
export CUDA_PATH=/usr -- at the end of your .bashrc and run
source ~/.bashrc

echo 2 | sudo tee /sys/class/leds/dell::kbd_backlight/brightness

NO Firefox - sec key

################################################
July 2024 Correct

sudo apt-get remove --purge -y '*nvidia*' '*cuda*' 'libcudnn*' '*cudnn*' '*nccl*'
sudo apt-get autoremove --purge -y
sudo apt-get clean
reboot

sudo ubuntu-drivers autoinstall
reboot

nvidia-smi

wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget https://developer.download.nvidia.com/compute/cuda/12.3.2/local_installers/cuda-repo-ubuntu2204-12-3-local_12.3.2-545.23.08-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu2204-12-3-local_12.3.2-545.23.08-1_amd64.deb
sudo cp /var/cuda-repo-ubuntu2204-12-3-local/cuda-*-keyring.gpg /usr/share/keyrings/
sudo apt-get update
sudo apt-get -y install cuda-toolkit-12-3

GO TO:

https://developer.nvidia.com/rdp/cudnn-archive

wget https://developer.download.nvidia.com/compute/cudnn/9.2.1/local_installers/cudnn-local-repo-debian12-9.2.1_1.0-1_amd64.deb
sudo dpkg -i cudnn-local-repo-debian12-9.2.1_1.0-1_amd64.deb
sudo cp /var/cudnn-local-repo-debian12-9.2.1/cudnn-*-keyring.gpg /usr/share/keyrings/
sudo apt-get update

nano ~/.bashrc

# Set CUDA Environment Variables for NVIDIA installation
export CUDA_HOME=/usr/local/cuda-12.3
export PATH=$CUDA_HOME/bin:$PATH
export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH

######################

Tensorflow:

tensorflow-2.11.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl

# Navigate to your extracted cuDNN folder
# Example: cd cudnn-linux-x86_64-8.9.7.29_cuda12-archive/

sudo cp include/cudnn*.h /usr/local/cuda-12.3/include
sudo cp lib/libcudnn* /usr/local/cuda-12.3/lib64
sudo chmod a+r /usr/local/cuda-12.3/include/cudnn*.h /usr/local/cuda-12.3/lib64/libcudnn*

python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
